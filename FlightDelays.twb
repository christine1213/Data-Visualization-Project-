<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (flightdelays)' inline='true' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='flightdelays' name='excel-direct.0zxx6nk1cn8hqz116etrc12t6ihz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/SI&apos;16 IT Del/Materi Kuliah/Semester VII/VISDAT/PROYEK/flightdelays.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='airports' name='excel-direct.1vc0z8o0tf36vi11vmcg11481xuj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/SI&apos;16 IT Del/Materi Kuliah/Semester VII/VISDAT/PROYEK/airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='airlines' name='excel-direct.1lp9r6b1jivyi71bagexf1u8p0rv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/SI&apos;16 IT Del/Materi Kuliah/Semester VII/VISDAT/PROYEK/airlines.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[AIRLINE]' />
              <expression op='[airlines].[IATA_CODE]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Sheet1].[ORIGIN_AIRPORT]' />
                <expression op='[airports].[IATA_CODE]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0zxx6nk1cn8hqz116etrc12t6ihz' name='Sheet1' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:AE10001:no:A1:AE2147483647:0' header='yes' outcome='2'>
                <column datatype='integer' name='YEAR' ordinal='0' />
                <column datatype='integer' date-parse-format='MM' name='MONTH' ordinal='1' />
                <column datatype='integer' name='DAY' ordinal='2' />
                <column datatype='integer' date-parse-format='MM' name='DAY_OF_WEEK' ordinal='3' />
                <column datatype='string' name='AIRLINE' ordinal='4' />
                <column datatype='string' name='FLIGHT_NUMBER' ordinal='5' />
                <column datatype='string' name='TAIL_NUMBER' ordinal='6' />
                <column datatype='string' name='ORIGIN_AIRPORT' ordinal='7' />
                <column datatype='string' name='DESTINATION_AIRPORT' ordinal='8' />
                <column datatype='string' name='SCHEDULED_DEPARTURE' ordinal='9' />
                <column datatype='string' name='DEPARTURE_TIME' ordinal='10' />
                <column datatype='integer' name='DEPARTURE_DELAY' ordinal='11' />
                <column datatype='integer' name='TAXI_OUT' ordinal='12' />
                <column datatype='string' name='WHEELS_OFF' ordinal='13' />
                <column datatype='integer' name='SCHEDULED_TIME' ordinal='14' />
                <column datatype='integer' name='ELAPSED_TIME' ordinal='15' />
                <column datatype='integer' name='AIR_TIME' ordinal='16' />
                <column datatype='integer' name='DISTANCE' ordinal='17' />
                <column datatype='integer' name='WHEELS_ON' ordinal='18' />
                <column datatype='integer' name='TAXI_IN' ordinal='19' />
                <column datatype='string' name='SCHEDULED_ARRIVAL' ordinal='20' />
                <column datatype='string' name='ARRIVAL_TIME' ordinal='21' />
                <column datatype='integer' name='ARRIVAL_DELAY' ordinal='22' />
                <column datatype='integer' name='DIVERTED' ordinal='23' />
                <column datatype='integer' name='CANCELLED' ordinal='24' />
                <column datatype='string' name='CANCELLATION_REASON' ordinal='25' />
                <column datatype='integer' name='AIR_SYSTEM_DELAY' ordinal='26' />
                <column datatype='integer' name='SECURITY_DELAY' ordinal='27' />
                <column datatype='integer' name='AIRLINE_DELAY' ordinal='28' />
                <column datatype='integer' name='LATE_AIRCRAFT_DELAY' ordinal='29' />
                <column datatype='integer' name='WEATHER_DELAY' ordinal='30' />
              </columns>
            </relation>
            <relation connection='excel-direct.1vc0z8o0tf36vi11vmcg11481xuj' name='airports' table='[airports$]' type='table'>
              <columns gridOrigin='A1:G323:no:A1:G323:0' header='yes' outcome='2'>
                <column datatype='string' name='IATA_CODE' ordinal='0' />
                <column datatype='string' name='AIRPORT' ordinal='1' />
                <column datatype='string' name='CITY' ordinal='2' />
                <column datatype='string' name='STATE' ordinal='3' />
                <column datatype='string' name='COUNTRY' ordinal='4' />
                <column datatype='string' name='LATITUDE' ordinal='5' />
                <column datatype='string' name='LONGITUDE' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1lp9r6b1jivyi71bagexf1u8p0rv' name='airlines' table='[airlines$]' type='table'>
            <columns gridOrigin='A1:B15:no:A1:B15:0' header='yes' outcome='6'>
              <column datatype='string' name='IATA_CODE' ordinal='0' />
              <column datatype='string' name='AIRLINE' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AIRLINE (airlines)]' value='[airlines].[AIRLINE]' />
          <map key='[AIRLINE]' value='[Sheet1].[AIRLINE]' />
          <map key='[AIRLINE_DELAY]' value='[Sheet1].[AIRLINE_DELAY]' />
          <map key='[AIRPORT]' value='[airports].[AIRPORT]' />
          <map key='[AIR_SYSTEM_DELAY]' value='[Sheet1].[AIR_SYSTEM_DELAY]' />
          <map key='[AIR_TIME]' value='[Sheet1].[AIR_TIME]' />
          <map key='[ARRIVAL_DELAY]' value='[Sheet1].[ARRIVAL_DELAY]' />
          <map key='[ARRIVAL_TIME]' value='[Sheet1].[ARRIVAL_TIME]' />
          <map key='[CANCELLATION_REASON]' value='[Sheet1].[CANCELLATION_REASON]' />
          <map key='[CANCELLED]' value='[Sheet1].[CANCELLED]' />
          <map key='[CITY]' value='[airports].[CITY]' />
          <map key='[COUNTRY]' value='[airports].[COUNTRY]' />
          <map key='[DAY]' value='[Sheet1].[DAY]' />
          <map key='[DAY_OF_WEEK]' value='[Sheet1].[DAY_OF_WEEK]' />
          <map key='[DEPARTURE_DELAY]' value='[Sheet1].[DEPARTURE_DELAY]' />
          <map key='[DEPARTURE_TIME]' value='[Sheet1].[DEPARTURE_TIME]' />
          <map key='[DESTINATION_AIRPORT]' value='[Sheet1].[DESTINATION_AIRPORT]' />
          <map key='[DISTANCE]' value='[Sheet1].[DISTANCE]' />
          <map key='[DIVERTED]' value='[Sheet1].[DIVERTED]' />
          <map key='[ELAPSED_TIME]' value='[Sheet1].[ELAPSED_TIME]' />
          <map key='[FLIGHT_NUMBER]' value='[Sheet1].[FLIGHT_NUMBER]' />
          <map key='[IATA_CODE (airlines)]' value='[airlines].[IATA_CODE]' />
          <map key='[IATA_CODE]' value='[airports].[IATA_CODE]' />
          <map key='[LATE_AIRCRAFT_DELAY]' value='[Sheet1].[LATE_AIRCRAFT_DELAY]' />
          <map key='[LATITUDE]' value='[airports].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[airports].[LONGITUDE]' />
          <map key='[MONTH]' value='[Sheet1].[MONTH]' />
          <map key='[ORIGIN_AIRPORT]' value='[Sheet1].[ORIGIN_AIRPORT]' />
          <map key='[SCHEDULED_ARRIVAL]' value='[Sheet1].[SCHEDULED_ARRIVAL]' />
          <map key='[SCHEDULED_DEPARTURE]' value='[Sheet1].[SCHEDULED_DEPARTURE]' />
          <map key='[SCHEDULED_TIME]' value='[Sheet1].[SCHEDULED_TIME]' />
          <map key='[SECURITY_DELAY]' value='[Sheet1].[SECURITY_DELAY]' />
          <map key='[STATE]' value='[airports].[STATE]' />
          <map key='[TAIL_NUMBER]' value='[Sheet1].[TAIL_NUMBER]' />
          <map key='[TAXI_IN]' value='[Sheet1].[TAXI_IN]' />
          <map key='[TAXI_OUT]' value='[Sheet1].[TAXI_OUT]' />
          <map key='[WEATHER_DELAY]' value='[Sheet1].[WEATHER_DELAY]' />
          <map key='[WHEELS_OFF]' value='[Sheet1].[WHEELS_OFF]' />
          <map key='[WHEELS_ON]' value='[Sheet1].[WHEELS_ON]' />
          <map key='[YEAR]' value='[Sheet1].[YEAR]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_WEEK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_WEEK]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DAY_OF_WEEK</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AIRLINE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FLIGHT_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FLIGHT_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FLIGHT_NUMBER</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAIL_NUMBER</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TAIL_NUMBER]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TAIL_NUMBER</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIGIN_AIRPORT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ORIGIN_AIRPORT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ORIGIN_AIRPORT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DESTINATION_AIRPORT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DESTINATION_AIRPORT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DESTINATION_AIRPORT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_DEPARTURE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SCHEDULED_DEPARTURE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SCHEDULED_DEPARTURE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_TIME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEPARTURE_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DEPARTURE_TIME</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTURE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPARTURE_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DEPARTURE_DELAY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_OUT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_OUT]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TAXI_OUT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_OFF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WHEELS_OFF]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WHEELS_OFF</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SCHEDULED_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SCHEDULED_TIME</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELAPSED_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ELAPSED_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ELAPSED_TIME</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AIR_TIME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_ON</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WHEELS_ON]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WHEELS_ON</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAXI_IN</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TAXI_IN]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TAXI_IN</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEDULED_ARRIVAL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SCHEDULED_ARRIVAL]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SCHEDULED_ARRIVAL</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_TIME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ARRIVAL_TIME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ARRIVAL_TIME</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARRIVAL_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ARRIVAL_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ARRIVAL_DELAY</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIVERTED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DIVERTED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DIVERTED</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CANCELLED]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CANCELLED</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCELLATION_REASON</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CANCELLATION_REASON]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CANCELLATION_REASON</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIR_SYSTEM_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIR_SYSTEM_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AIR_SYSTEM_DELAY</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SECURITY_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SECURITY_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SECURITY_DELAY</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AIRLINE_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AIRLINE_DELAY</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATE_AIRCRAFT_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LATE_AIRCRAFT_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>LATE_AIRCRAFT_DELAY</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER_DELAY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WEATHER_DELAY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WEATHER_DELAY</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AE10001:no:A1:AE2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G323:no:A1:G323:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IATA_CODE (airlines)]</local-name>
            <parent-name>[airlines]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRLINE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AIRLINE (airlines)]</local-name>
            <parent-name>[airlines]</parent-name>
            <remote-alias>AIRLINE</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airlines]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B15:no:A1:B15:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
      <column datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column datatype='integer' name='[AIR_SYSTEM_DELAY]' role='measure' type='quantitative' />
      <column datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
      <column datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
      <column datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
      <column datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
      <column datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
      <column datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Attribute' name='[attr:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIRLINE_DELAY]' derivation='Avg' name='[avg:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIR_SYSTEM_DELAY]' derivation='Avg' name='[avg:AIR_SYSTEM_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_DELAY]' derivation='Avg' name='[avg:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCELLED]' derivation='Avg' name='[avg:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='Avg' name='[avg:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Avg' name='[avg:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Avg' name='[avg:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Avg' name='[avg:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Avg' name='[avg:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIRLINE_DELAY]' derivation='Count' name='[cnt:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCELLED]' derivation='Count' name='[cnt:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Count' name='[cnt:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Count' name='[cnt:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCELLED]' derivation='CountD' name='[ctd:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='CountD' name='[ctd:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MONTH]' derivation='Day' name='[dy:MONTH:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CANCELLED]' derivation='Max' name='[max:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Max' name='[max:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MONTH]' derivation='Month' name='[mn:MONTH:ok]' pivot='key' type='ordinal' />
      <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='None' name='[none:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='None' name='[none:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCELLED]' derivation='Sum' name='[sum:CANCELLED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIVERTED]' derivation='Sum' name='[sum:DIVERTED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
      <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY'>
          <field>[COUNTRY]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.54013' measure-ordering='alphabetic' measure-percentage='0.45987' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[dy:MONTH:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AIRPORT:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alpena County Regional Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boise AirportÂ (Boise Air Terminal)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cincinnati/Northern Kentucky International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dickinson Theodore Roosevelt Regional Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresno Yosemite International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hartsfield-Jackson Atlanta International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry E. Rohlsen Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Beach AirportÂ (Daugherty Field)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McClellan-Palomar Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niagara Falls International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norman Y. Mineta San JosÃ© International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Barbara Municipal AirportÂ (Santa Barbara Airport)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ted Stevens Anchorage International Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yampa Valley AirportÂ (Yampa Valley Regional)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen Regional Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene Regional Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;City of Colorado Springs Municipal Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Des Moines International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Smith Regional Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand Forks International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Idaho Falls Regional Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lehigh Valley International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Louisville International AirportÂ (Standiford Field)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattan Regional Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reno/Tahoe International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento International Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spokane International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albany International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Birmingham-Shuttlesworth International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duluth International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gen. Edward Lawrence Logan International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gerald R. Ford International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Key West International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manchester-Boston Regional Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newport News/Williamsburg International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Port Columbus International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Antonio International Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria Public AirportÂ (Capt G. Allan Hancock Field)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asheville Regional Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brownsville/South Padre Island International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corpus Christi International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dallas/Fort Worth International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Great Falls International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jack Brooks Regional AirportÂ (Southeast Texas Regional)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joplin Regional Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Memphis International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakland International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pensacola International AirportÂ (Pensacola Gulf Coast Regional Airport)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rhinelander-Oneida County Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle-Tacoma International Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tri-Cities Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tulsa International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Appleton International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bozeman Yellowstone International AirportÂ (Gallatin Field Airport)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cleveland Hopkins International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia Metropolitan Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dothan Regional Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gillette-Campbell County Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hector International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laramie Regional Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McGhee Tyson Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norfolk International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northwest Arkansas Regional Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syracuse Hancock International Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Texarkana Regional AirportÂ (Webb Field)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Worcester Regional Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yeager Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albert J. Ellis Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bismarck Municipal Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Nebraska Regional Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Durango-La Plata County Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fayetteville Regional Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;General Mitchell International Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Junction Regional AirportÂ (Walker Field)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lihue Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mobile Regional Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe Regional Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portland International Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego International AirportÂ (Lindbergh Field)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Savannah/Hilton Head International Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilkes-Barre/Scranton International Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Will Rogers World Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barkley Regional Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chippewa Valley Regional Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delta County Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso International Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmira/Corning Regional Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gunnison-Crested Butte Regional Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John F. Kennedy International AirportÂ (New York International Airport)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Los Angeles International Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natrona County International Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redmond Municipal AirportÂ (Roberts Field)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rogue Valley International Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Reagan Washington National Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valdez Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abraham Lincoln Capital Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellingham International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlotte Douglas International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fairbanks International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Wayne International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hattiesburg-Laurel Regional Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juneau International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles Regional Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lubbock Preston Smith International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McAllen-Miller International AirportÂ (McAllen Miller International)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Piedmont Triad International Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo Regional AirportÂ (Mathis Field)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud Regional Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Dulles International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austin-Bergstrom International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cedar City Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devils Lake Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evansville Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guam International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James M. Cox Dayton International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laredo International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minneapolis-Saint Paul International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palm Springs International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rick Husband Amarillo International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sloulin Field International Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southwest Georgia Regional Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Illinois - Willard Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albuquerque International Sunport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bishop International Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charleston International Airport/Charleston AFB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago Midway International Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eagle County Regional Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenville-Spartanburg International Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hays Regional Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kona International Airport at Keahole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monterey Regional AirportÂ (Monterey Peninsula Airport)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montgomery Regional Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portland International Jetport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Springfield-Branson National Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Louis International Airport at Lambert Field&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aspen-Pitkin County Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buffalo Niagara International Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyril E. King Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dane County Regional Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greater Rochester International Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Hole Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen-Fort Hood Regional Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mercedita Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phoenix Sky Harbor International Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Range Regional AirportÂ (Chisholm-Hibbing Airport)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochester International Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport Regional Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waco Regional Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yuma International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlantic City International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burlington International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Destin-Fort Walton Beach Airport/Eglin AFB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Erie International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Green Bay-Austin Straubel International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lawton-Fort Sill Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montrose Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Quad City International Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rapid City Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux Falls Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tri-Cities Regional Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wichita Falls Municipal Airport/Sheppard AFB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Baltimore-Washington International Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canyonlands Field&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chippewa County International Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daytona Beach International Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Easterwood Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Huntsville International Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown Regional Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lea County Regional Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minot International Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pellston Regional Airport of Emmet County&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rock Springs-Sweetwater County Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend International AirportÂ (South Bend Regional)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University Park Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baton Rouge Metropolitan Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Wisconsin Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denver International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Lauderdale-Hollywood International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harrisburg International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;John Wayne AirportÂ (Orange County Airport)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse Regional Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louis Armstrong New Orleans International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newark Liberty International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philadelphia International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell International Air Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Southwest Florida International Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valley International Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arcata Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bradley International Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbia Regional Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dubuque Regional Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elko Regional Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glacier Park International Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houghton County Memorial Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Long Island MacArthur Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meadows Field&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ontario International Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rafael HernÃ¡ndez Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tampa International Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Eastern Iowa Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yellowstone Regional Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill and Hillary Clinton National AirportÂ (Adams Field)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bob Hope AirportÂ (Hollywood Burbank Airport)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cherry Capital Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chicago O&apos;Hare International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Texas Regional Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gulfport-Biloxi International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helena Regional Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincoln AirportÂ (Lincoln Municipal)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McCarran International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashville International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Luis Obispo County Regional AirportÂ (McChesney Field)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tallahassee International Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wilmington Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandria International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bemidji Regional Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bethel Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charlottesville-Albemarle Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Falls International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Friedman Memorial Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;General Wayne A. Downing Peoria International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kahului Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luis MuÃ±oz MarÃ­n International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miami International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pittsburgh International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salt Lake City International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Francisco International Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waterloo Regional Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Augusta Regional AirportÂ (Bush Field)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Capital Region International AirportÂ ( Lansing Capital City)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Detroit Metropolitan Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eugene AirportÂ (Mahlon Sweet Field)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honolulu International Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jacksonville International Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LaGuardia Airport (Marine Air Terminal)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Beach International Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palm Beach International Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Redding Municipal Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Gateway Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tyler Pounds Regional Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita Dwight D. Eisenhower National AirportÂ (Wichita Mid-Continent Airport)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;William P. Hobby Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arnold Palmer Regional Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brainerd Lakes Regional Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas Love Field&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eppley Airfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hilo International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson-Evers International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melbourne International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orlando International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pueblo Memorial Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raleigh-Durham International Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Theodore Francis Green State Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trenton Mercer Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tucson International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Akron-Canton Regional Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Billings Logan International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blue Grass Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flagstaff Pulliam Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garden City Regional Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;George Bush Intercontinental Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Magic Valley Regional AirportÂ (Joslin Field)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MBS International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Midland International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Plattsburgh International Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe Municipal Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. George Regional Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westchester County Airport&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:MONTH:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:AIRLINE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:AIRLINE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:AIRLINE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[attr:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:AIR_SYSTEM_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[ctd:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[max:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:WEATHER_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DIVERTED:qk]&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:SECURITY_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[ctd:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[max:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:CANCELLED:qk]&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:DEPARTURE_DELAY:qk]&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:ARRIVAL_DELAY:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='airports (airports)' inline='true' name='federated.0ctdoc60798n2u1cppufy02y89wv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airports' name='excel-direct.077egr50iqbu1o12jrccy0w6smuw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/SI&apos;16 IT Del/Materi Kuliah/Semester VII/VISDAT/PROYEK/airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='airlines' name='excel-direct.1woeril1iin0nu1ec05wz1jy47hs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/SI&apos;16 IT Del/Materi Kuliah/Semester VII/VISDAT/PROYEK/airlines.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.077egr50iqbu1o12jrccy0w6smuw' name='airports' table='[airports$]' type='table'>
          <columns gridOrigin='A1:G323:no:A1:G323:0' header='yes' outcome='2'>
            <column datatype='string' name='IATA_CODE' ordinal='0' />
            <column datatype='string' name='AIRPORT' ordinal='1' />
            <column datatype='string' name='CITY' ordinal='2' />
            <column datatype='string' name='STATE' ordinal='3' />
            <column datatype='string' name='COUNTRY' ordinal='4' />
            <column datatype='string' name='LATITUDE' ordinal='5' />
            <column datatype='string' name='LONGITUDE' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>IATA_CODE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[IATA_CODE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>IATA_CODE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LID_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G323:no:A1:G323:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[LATITUDE]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='string' name='[LONGITUDE]' role='dimension' semantic-role='[Airport].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY'>
          <field>[COUNTRY]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.613883' measure-ordering='alphabetic' measure-percentage='0.386117' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delays Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='US Flight Delays Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airline&apos;s Arrival Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[MONTH]' derivation='None' name='[none:MONTH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]</rows>
        <cols>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]</cols>
      </table>
      <simple-id uuid='{82FB109B-BEB0-4DA9-94BD-1E10DFF50C52}' />
    </worksheet>
    <worksheet name='Airline&apos;s departure delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Airline&apos;s Departure Delay </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='string' name='[AIRLINE]' role='dimension' type='nominal' />
            <column datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
            <column-instance column='[AIRLINE]' derivation='None' name='[none:AIRLINE:nk]' pivot='key' type='nominal' />
            <column-instance column='[MONTH]' derivation='None' name='[none:MONTH:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' value='MONTH'>
              <formatted-text>
                <run bold='true' fontalignment='1'>MONTH</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]</rows>
        <cols>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]</cols>
      </table>
      <simple-id uuid='{9792EB91-5D2A-4AA9-B625-772DEDFE72FE}' />
    </worksheet>
    <worksheet name='CF AND LATE AIRCRAFT 2015 NON INT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Flights Delay in All Non-International Airports in 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='integer' name='[AIRLINE_DELAY]' role='measure' type='quantitative' />
            <column datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='integer' name='[CANCELLED]' role='measure' type='quantitative' />
            <column datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[CANCELLED]' derivation='Count' name='[cnt:CANCELLED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[AIRLINE_DELAY]' derivation='Sum' name='[sum:AIRLINE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Aberdeen Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Abilene Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Abraham Lincoln Capital Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Adak Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Akron-Canton Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Albert J. Ellis Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Alpena County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Arcata Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Arnold Palmer Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Asheville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Aspen-Pitkin County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Augusta Regional AirportÂ (Bush Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Barkley Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Barnstable Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Baton Rouge Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bemidji Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bert Mooney Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bethel Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bill and Hillary Clinton National AirportÂ (Adams Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bismarck Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Blue Grass Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bob Hope AirportÂ (Hollywood Burbank Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Boise AirportÂ (Boise Air Terminal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Brainerd Lakes Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Brunswick Golden Isles Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Canyonlands Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cedar City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Nebraska Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Wisconsin Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Charlottesville-Albemarle Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Chattanooga Metropolitan AirportÂ (Lovell Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cherry Capital Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Chippewa Valley Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;City of Colorado Springs Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Coastal Carolina Regional AirportÂ (Craven County Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbia Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbia Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbus Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cyril E. King Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dallas Love Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dane County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Deadhorse AirportÂ (Prudhoe Bay Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Del Norte County AirportÂ (Jack McNamara Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Delta County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Destin-Fort Walton Beach Airport/Eglin AFB&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Detroit Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Devils Lake Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dickinson Theodore Roosevelt Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dillingham Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dothan Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dubuque Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Durango-La Plata County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eagle County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;East Texas Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Easterwood Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Elko Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Elmira/Corning Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eppley Airfield&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eugene AirportÂ (Mahlon Sweet Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Evansville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fayetteville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Flagstaff Pulliam Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ford Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fort Smith Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Friedman Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gainesville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Garden City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;George Bush Intercontinental Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gillette-Campbell County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Golden Triangle Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Grand Junction Regional AirportÂ (Walker Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Greater Binghamton Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gunnison-Crested Butte Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gustavus Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hattiesburg-Laurel Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hays Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Helena Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Henry E. Rohlsen Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Houghton County Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Idaho Falls Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ithaca Tompkins Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jack Brooks Regional AirportÂ (Southeast Texas Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jackson Hole Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jamestown Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;John Wayne AirportÂ (Orange County Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Joplin Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Kahului Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Killeen-Fort Hood Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;King Salmon Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Kodiak Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;La Crosse Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lafayette Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;LaGuardia Airport (Marine Air Terminal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lake Charles Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Laramie Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lawton-Fort Sill Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lea County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lewiston-Nez Perce County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lihue Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lincoln AirportÂ (Lincoln Municipal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Long Beach AirportÂ (Daugherty Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Long Island MacArthur Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Magic Valley Regional AirportÂ (Joslin Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mammoth Yosemite Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Manchester-Boston Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Manhattan Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Martha&apos;s Vineyard Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;McClellan-Palomar Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;McGhee Tyson Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Meadows Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mercedita Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Meridian Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Merle K. (Mudhole) Smith Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mobile Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Monroe Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Monterey Regional AirportÂ (Monterey Peninsula Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Montgomery Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Montrose Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Muskegon County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Nantucket Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Nome Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Northeast Florida Regional AirportÂ (St. Augustine Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Northwest Arkansas Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pellston Regional Airport of Emmet County&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Petersburg James A. Johnson Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pocatello Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pueblo Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rafael HernÃ¡ndez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ralph Wien Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Range Regional AirportÂ (Chisholm-Hibbing Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rapid City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Redding Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Redmond Municipal AirportÂ (Roberts Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rhinelander-Oneida County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Roanoke Regional AirportÂ (Woodrum Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rock Springs-Sweetwater County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ronald Reagan Washington National Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;San Angelo Regional AirportÂ (Mathis Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;San Luis Obispo County Regional AirportÂ (McChesney Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Barbara Municipal AirportÂ (Santa Barbara Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Fe Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Maria Public AirportÂ (Capt G. Allan Hancock Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Shreveport Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sioux Falls Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sioux Gateway Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sitka Rocky Gutierrez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Southwest Georgia Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Southwest Oregon Regional AirportÂ (North Bend Municipal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Springfield-Branson National Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;St. Cloud Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;St. George Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Texarkana Regional AirportÂ (Webb Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;The Eastern Iowa Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Theodore Francis Green State Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Toledo Express Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Trenton Mercer Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tri-Cities Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tri-Cities Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tyler Pounds Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;University of Illinois - Willard Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;University Park Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Valdez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Valdosta Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Waco Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Waterloo Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Westchester County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Westerly State Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wichita Dwight D. Eisenhower National AirportÂ (Wichita Mid-Continent Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wichita Falls Municipal Airport/Sheppard AFB&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wiley Post-Will Rogers Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Will Rogers World Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;William P. Hobby Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wilmington Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Worcester Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wrangell Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yakutat Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yampa Valley AirportÂ (Yampa Valley Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yeager Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yellowstone Regional Airport&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:AIRLINE_DELAY:qk]' included-values='in-range'>
            <min>0</min>
            <max>1754</max>
          </filter>
          <slices>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</column>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:AIRLINE_DELAY:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]' />
              <size column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:CANCELLED:qk]' />
              <text column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]' />
              <lod column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:WEATHER_DELAY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E4A78BB7-5782-47A7-90A3-C344D9AA885A}' />
    </worksheet>
    <worksheet name='DF BY AIRLINE AIRCRAFT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Airport Flight Delays in USA in 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Count' name='[cnt:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:LATE_AIRCRAFT_DELAY:qk]' included-values='in-range'>
            <min>10</min>
            <max>296</max>
          </filter>
          <slices>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:LATE_AIRCRAFT_DELAY:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]' />
              <text column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]' />
              <lod column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:SECURITY_DELAY:qk]' />
              <lod column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]' />
              <lod column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:WEATHER_DELAY:qk]' />
              <color column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]' />
              <lod column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3DDD66EB-126E-4924-AA70-200AA7984EE4}' />
    </worksheet>
    <worksheet name='DF JAN 2015 NON-INT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Diverted Flights on January 2015 in All Non-International Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Count' name='[cnt:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Aberdeen Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Abilene Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Abraham Lincoln Capital Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Adak Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Akron-Canton Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Albert J. Ellis Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Alpena County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Arcata Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Arnold Palmer Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Asheville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Aspen-Pitkin County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Augusta Regional AirportÂ (Bush Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Barkley Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Barnstable Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Baton Rouge Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bemidji Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bert Mooney Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bethel Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bill and Hillary Clinton National AirportÂ (Adams Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bismarck Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Blue Grass Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Bob Hope AirportÂ (Hollywood Burbank Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Boise AirportÂ (Boise Air Terminal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Brainerd Lakes Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Brunswick Golden Isles Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Canyonlands Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cedar City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Illinois Regional Airport at Bloomington-Normal&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Nebraska Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Central Wisconsin Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Charlottesville-Albemarle Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Chattanooga Metropolitan AirportÂ (Lovell Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cherry Capital Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Chippewa Valley Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;City of Colorado Springs Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Coastal Carolina Regional AirportÂ (Craven County Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbia Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbia Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Columbus Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cyril E. King Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dallas Love Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dane County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Deadhorse AirportÂ (Prudhoe Bay Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Del Norte County AirportÂ (Jack McNamara Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Delta County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Destin-Fort Walton Beach Airport/Eglin AFB&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Detroit Metropolitan Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Devils Lake Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dickinson Theodore Roosevelt Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dillingham Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dothan Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dubuque Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Durango-La Plata County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eagle County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;East Texas Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Easterwood Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Elko Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Elmira/Corning Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eppley Airfield&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Eugene AirportÂ (Mahlon Sweet Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Evansville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fayetteville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Flagstaff Pulliam Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ford Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fort Smith Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Friedman Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gainesville Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Garden City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;George Bush Intercontinental Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gillette-Campbell County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Golden Triangle Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Grand Junction Regional AirportÂ (Walker Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Greater Binghamton Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gunnison-Crested Butte Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gustavus Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hattiesburg-Laurel Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hays Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Helena Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Henry E. Rohlsen Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Houghton County Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Idaho Falls Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ithaca Tompkins Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jack Brooks Regional AirportÂ (Southeast Texas Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jackson Hole Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jamestown Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;John Wayne AirportÂ (Orange County Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Joplin Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Kahului Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Killeen-Fort Hood Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;King Salmon Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Kodiak Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;La Crosse Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lafayette Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;LaGuardia Airport (Marine Air Terminal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lake Charles Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Laramie Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lawton-Fort Sill Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lea County Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lewiston-Nez Perce County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lihue Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Lincoln AirportÂ (Lincoln Municipal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Long Beach AirportÂ (Daugherty Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Long Island MacArthur Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Magic Valley Regional AirportÂ (Joslin Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mammoth Yosemite Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Manchester-Boston Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Manhattan Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Martha&apos;s Vineyard Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;McClellan-Palomar Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;McGhee Tyson Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Meadows Field&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mercedita Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Meridian Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Merle K. (Mudhole) Smith Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Mobile Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Monroe Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Monterey Regional AirportÂ (Monterey Peninsula Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Montgomery Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Montrose Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Muskegon County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Nantucket Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Nome Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Northeast Florida Regional AirportÂ (St. Augustine Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Northwest Arkansas Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pellston Regional Airport of Emmet County&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Petersburg James A. Johnson Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pocatello Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pueblo Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rafael HernÃ¡ndez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ralph Wien Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Range Regional AirportÂ (Chisholm-Hibbing Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rapid City Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Redding Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Redmond Municipal AirportÂ (Roberts Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rhinelander-Oneida County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Roanoke Regional AirportÂ (Woodrum Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rock Springs-Sweetwater County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ronald Reagan Washington National Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;San Angelo Regional AirportÂ (Mathis Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;San Luis Obispo County Regional AirportÂ (McChesney Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Barbara Municipal AirportÂ (Santa Barbara Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Fe Municipal Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Santa Maria Public AirportÂ (Capt G. Allan Hancock Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Shreveport Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sioux Falls Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sioux Gateway Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sitka Rocky Gutierrez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Southwest Georgia Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Southwest Oregon Regional AirportÂ (North Bend Municipal)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Springfield-Branson National Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;St. Cloud Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;St. George Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Texarkana Regional AirportÂ (Webb Field)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;The Eastern Iowa Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Theodore Francis Green State Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Toledo Express Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Trenton Mercer Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tri-Cities Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tri-Cities Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tyler Pounds Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;University of Illinois - Willard Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;University Park Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Valdez Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Valdosta Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Waco Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Waterloo Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Westchester County Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Westerly State Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wichita Dwight D. Eisenhower National AirportÂ (Wichita Mid-Continent Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wichita Falls Municipal Airport/Sheppard AFB&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wiley Post-Will Rogers Memorial Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Will Rogers World Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;William P. Hobby Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wilmington Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Worcester Regional Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Wrangell Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yakutat Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yampa Valley AirportÂ (Yampa Valley Regional)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yeager Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Yellowstone Regional Airport&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:DIVERTED:qk]' />
              <text column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#f17b79' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{621A8578-033B-4266-9B56-00C50D02E76B}' />
    </worksheet>
    <worksheet name='DF jan 2015 int'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Diverted Flights on January 2015 in All International Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
            <column datatype='integer' name='[DIVERTED]' role='measure' type='quantitative' />
            <column-instance column='[DIVERTED]' derivation='Count' name='[cnt:DIVERTED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AIRPORT]' derivation='None' name='[none:AIRPORT:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Alexandria International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Charleston International Airport/Charleston AFB&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Chicago O&apos;Hare International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Cincinnati/Northern Kentucky International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Dallas/Fort Worth International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;El Paso International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fort Lauderdale-Hollywood International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Fort Wayne International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;General Wayne A. Downing Peoria International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gerald R. Ford International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Greenville-Spartanburg International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Gulfport-Biloxi International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hartsfield-Jackson Atlanta International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Hector International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Jackson-Evers International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Laredo International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Los Angeles International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Louis Armstrong New Orleans International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;McAllen-Miller International AirportÂ (McAllen Miller International)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Miami International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Midland International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Missoula International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Nashville International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Norman Y. Mineta San JosÃ© International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ontario International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Orlando International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Pensacola International AirportÂ (Pensacola Gulf Coast Regional Airport)&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Phoenix Sky Harbor International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Quad City International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Rick Husband Amarillo International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Roswell International Air Center&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Sacramento International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;San Francisco International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Savannah/Hilton Head International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tallahassee International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Ted Stevens Anchorage International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tucson International Airport&quot;' />
              <groupfilter function='member' level='[none:AIRPORT:nk]' member='&quot;Tulsa International Airport&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:DIVERTED:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:DIVERTED:qk]' />
              <text column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#b4b4b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{335E9972-1C73-4FDF-9814-F7F1FB8DE22B}' />
    </worksheet>
    <worksheet name='flight delays causes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>Flight Delays Causes in USA Airports</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (flightdelays)' name='federated.1htfhjo1htgyuo1dpbhgi1oy8og5' />
          </datasources>
          <datasource-dependencies datasource='federated.1htfhjo1htgyuo1dpbhgi1oy8og5'>
            <column datatype='integer' name='[ARRIVAL_DELAY]' role='measure' type='quantitative' />
            <column datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[DEPARTURE_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[LATE_AIRCRAFT_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[SECURITY_DELAY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[WEATHER_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Avg' name='[avg:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[ARRIVAL_DELAY]' derivation='Sum' name='[sum:ARRIVAL_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEPARTURE_DELAY]' derivation='Sum' name='[sum:DEPARTURE_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LATE_AIRCRAFT_DELAY]' derivation='Sum' name='[sum:LATE_AIRCRAFT_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SECURITY_DELAY]' derivation='Sum' name='[sum:SECURITY_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WEATHER_DELAY]' derivation='Sum' name='[sum:WEATHER_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:WEATHER_DELAY:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:SECURITY_DELAY:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:WEATHER_DELAY:qk]&quot;</bucket>
              <bucket>&quot;[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:SECURITY_DELAY:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[Multiple Values]' field-type='quantitative' max='251505.38835986401' min='-6545.1869890940761' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' value='Flight Delays Causes Measure Names'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Flight Delays Causes Measure Names</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[Multiple Values]</rows>
        <cols>([federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:COUNTRY:nk] / [federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DB47DF90-CF15-4052-9E76-96468202FC5A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='US Flight Delays Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#666666' fontname='Bodoni MT' fontsize='24'>FLIGHTS DELAY IN USA AIRPORTS IN 2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_3' value='top' />
          <format attr='text-align' id='dash-text_3' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='73' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='68' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='64' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                <zone h='98000' id='62' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                  <zone h='98000' id='56' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                    <zone h='98000' id='47' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                      <zone h='98000' id='44' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                        <zone h='98000' id='38' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                          <zone h='98000' id='32' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
                            <zone h='98000' id='8' param='vert' type='layout-flow' w='82400' x='800' y='1000'>
                              <zone fixed-size='39' h='5875' id='9' is-fixed='true' type='title' w='82400' x='800' y='1000'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                  <format attr='background-color' value='#f7f7f0' />
                                </zone-style>
                              </zone>
                              <zone fixed-size='445' h='55625' id='75' is-fixed='true' param='horz' type='layout-flow' w='82400' x='800' y='6875'>
                                <zone fixed-size='382' h='55625' id='76' is-fixed='true' name='flight delays causes' w='39000' x='800' y='6875'>
                                  <layout-cache minheight='235' type-h='scalable' type-w='fixed' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                                <zone fixed-size='678' h='55625' id='78' is-fixed='true' name='DF BY AIRLINE AIRCRAFT' w='43400' x='39800' y='6875'>
                                  <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='cell' />
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                              <zone h='36500' id='58' param='vert' type='layout-flow' w='82400' x='800' y='62500'>
                                <zone h='36500' id='65' param='horz' type='layout-flow' w='82400' x='800' y='62500'>
                                  <zone h='36500' id='70' name='Airline&apos;s Arrival Delay' w='41194' x='800' y='62500'>
                                    <layout-cache cell-count-w='14' minheight='203' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                  <zone h='36500' id='71' name='Airline&apos;s departure delay' w='41194' x='41994' y='62500'>
                                    <layout-cache cell-count-w='14' minheight='203' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='4' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='72' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone fixed-size='124' h='16500' id='77' is-fixed='true' name='flight delays causes' pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='354' forceUpdate='true' h='45250' id='80' is-fixed='true' type='text' w='16000' x='83200' y='17500'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000'>Airline Lists</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>UA = United Air Lines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>AA = American Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>US = US Airways Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>F9 = Frontier Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>B6 = JetBlue Airways</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>OO = Skywest Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>AS = Alaska Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>NK = Spirit Air Lines</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>WN = Southwest Airlines Co.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>DL = Delta Air Lines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>EV = Atlantic Southeast Airlines</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>HA = Hawaiian Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>MQ = American Eagle Airlines Inc.</run>
                  <run>Æ&#10;</run>
                  <run fontcolor='#000000'>VX = Virgin America</run>
                  <run>Æ&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#666666' fontname='Bodoni MT' fontsize='24'>FLIGHTS DELAY IN USA AIRPORTS IN 2015</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='99' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='100' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='39' h='5875' id='9' type='title' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f7f7f0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55625' id='76' is-fixed='true' name='flight delays causes' w='39000' x='800' y='6875'>
                  <layout-cache minheight='235' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='124' h='16500' id='77' name='flight delays causes' pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55625' id='78' is-fixed='true' name='DF BY AIRLINE AIRCRAFT' w='43400' x='39800' y='6875'>
                  <layout-cache cell-count-h='1' non-cell-size-h='43' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='354' forceUpdate='true' h='45250' id='80' type='text' w='16000' x='83200' y='17500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000'>Airline Lists</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>UA = United Air Lines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>AA = American Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>US = US Airways Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>F9 = Frontier Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>B6 = JetBlue Airways</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>OO = Skywest Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>AS = Alaska Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>NK = Spirit Air Lines</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>WN = Southwest Airlines Co.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>DL = Delta Air Lines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>EV = Atlantic Southeast Airlines</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>HA = Hawaiian Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>MQ = American Eagle Airlines Inc.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>VX = Virgin America</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36500' id='70' is-fixed='true' name='Airline&apos;s Arrival Delay' w='41194' x='800' y='62500'>
                  <layout-cache cell-count-w='14' minheight='203' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36500' id='71' is-fixed='true' name='Airline&apos;s departure delay' w='41194' x='41994' y='62500'>
                  <layout-cache cell-count-w='14' minheight='203' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DF041740-C8F4-46CD-8CC3-2FA778A71625}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='DF jan 2015 int'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ctdoc60798n2u1cppufy02y89wv].[none:AIRPORT:nk]</field>
            <field>[federated.0ctdoc60798n2u1cppufy02y89wv].[none:IATA_CODE:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[cnt:DIVERTED:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:CANCELLED:ok]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:ORIGIN_AIRPORT:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[tyr:MONTH:ok]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[tyr:MONTH:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[yr:MONTH:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1430B36D-A02E-4997-AC5B-74DDDC1D1B7F}' />
    </window>
    <window class='worksheet' name='DF JAN 2015 NON-INT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[mn:MONTH:ok]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9817FF5-F859-41EE-ADB4-99E204D93FC4}' />
    </window>
    <window class='worksheet' name='DF BY AIRLINE AIRCRAFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:ARRIVAL_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[avg:AIRLINE_DELAY:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:CITY:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:COUNTRY:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:STATE:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:DEPARTURE_DELAY:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1DC8E462-34C4-40C1-AA14-CDE8BE968E42}' />
    </window>
    <window class='worksheet' name='CF AND LATE AIRCRAFT 2015 NON INT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='47' type='filters' />
            <card size='195' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[sum:LATE_AIRCRAFT_DELAY:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[tyr:MONTH:ok]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[tyr:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64F95D02-EEB9-4299-9C2B-CDBADC62A08C}' />
    </window>
    <window class='worksheet' name='flight delays causes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRPORT:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:COUNTRY:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25EEA9D7-C605-48C2-9DB0-DB31FE014D6B}' />
    </window>
    <window class='worksheet' name='Airline&apos;s departure delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:DEPARTURE_DELAY:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[wd:DAY_OF_WEEK:ok]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[yr:DAY_OF_WEEK:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29B72B4D-9478-4812-8C98-91DF59A31439}' />
    </window>
    <window class='worksheet' name='Airline&apos;s Arrival Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:AIRLINE:nk]</field>
            <field>[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[none:MONTH:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83232896-C538-4FAB-957C-BF06E1DE25B7}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delays Dashboard'>
      <viewpoints>
        <viewpoint name='Airline&apos;s Arrival Delay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Airline&apos;s departure delay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DF BY AIRLINE AIRCRAFT'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='flight delays causes'>
          <highlight field='[federated.1htfhjo1htgyuo1dpbhgi1oy8og5].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DD5FE5E0-81BA-4CA6-86DB-73C58148B2D7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline&apos;s Arrival Delay' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airline&apos;s departure delay' width='192'>
      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
      8tudAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CF AND LATE AIRCRAFT 2015 NON INT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DF BY AIRLINE AIRCRAFT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DF JAN 2015 NON-INT' width='192'>
      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
      d3+jr3m3+Qs8gWB6/UACFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DF jan 2015 int' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='US Flight Delays Dashboard' width='192'>
      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
      DmYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='flight delays causes' width='192'>
      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
      BQEHR6K1rN16AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
